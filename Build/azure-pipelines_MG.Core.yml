trigger: 
  branches:
    include:
    - Core
  paths:
    exclude: # file paths which will not trigger a build
    - Build/*

jobs:
- job: GetVersionJob
  pool:
    vmImage: 'windows-latest'
  steps:
  - checkout: self
    fetchDepth: 10 

  - task: PowerShell@2
    displayName: Get the version from directory.builds.props
    name: SetVersionTask
    inputs:
      targetType: 'inline'
      script: |
        [string] $version = (Select-Xml -Path Source\Directory.Build.props -XPath "/Project/PropertyGroup/VersionPrefix").Node.InnerText
        Write-Host "Updating the value of the codeVersion to '$version'."
        Write-Host "##vso[task.setvariable variable=versionFromCode;isOutput=true;]$version";

  - task: PowerShell@2
    displayName: Show the version
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Current versionFromCode is '$(SetVersionTask.versionFromCode)'."

- job: Build
  dependsOn: GetVersionJob
  pool:
    vmImage: 'windows-latest'

  variables:
    solution: 'Source/Orts.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    versionFromCode: $[dependencies.GetVersionJob.outputs['SetVersionTask.versionFromCode']]
    counterName: '$(prerelease)$(versionFromCode)'
    buildNumber: $[counter(variables['counterName'], 0)]
    versionSuffix: '$(prerelease).$(buildNumber)+$(channel)'
    version: '$versionFromCode-$(versionSuffix)'

  steps:
  - checkout: self
    fetchDepth: 20 

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: PowerShell@2
    displayName: Set the name of the build
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Setting the name of the build to '$version'."
        Write-Host "##vso[build.updatebuildnumber]$version"

  - task: MSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArchitecture: 'x64'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '-property:versionsuffix=$(versionSuffix)'
  
  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: './Program.Core/'
      includeRootFolder: true 
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(version).zip'
      replaceExistingArchive: true

  - task: AzureFileCopy@3
    inputs:
      SourcePath: '$(Build.ArtifactStagingDirectory)/$(version).zip'
      ConnectedServiceNameARM: 'Visual Studio Enterprise(81c98ddc-0e66-422e-af90-10337e5c2352)'
      Destination: 'AzureBlob'
      StorageAccountRM: 'ultimaterails'
      ContainerName: 'ci-builds'
      BlobPrefix: 'core'

