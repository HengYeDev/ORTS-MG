# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  #solution: '**/ORTS.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '$InstallerURI = "https://download.visualstudio.microsoft.com/download/pr/7afca223-55d2-470a-8edc-6a1739ae3252/c8c829444416e811be84c5765ede6148/NDP48-DevPack-ENU.exe";
      $outpath = "$PSScriptRoot/NDP48-DevPack-ENU.exe";
      Invoke-WebRequest -UseBasicParsing -Uri $InstallerURI -OutFile $outpath;
      $args = @("Setup", "/passive", "/norestart" );
      Start-Process -Filepath "$PSScriptRoot/NDP48-DevPack-ENU.exe" -ArgumentList $args;
      Restart-Computer;'

- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: './Program/'
    includeRootFolder: true 
    verbose: true # Optional

- task: AzureFileCopy@3
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ConnectedServiceNameARM: 'Visual Studio Enterprise(81c98ddc-0e66-422e-af90-10337e5c2352)'
    Destination: 'AzureBlob'
    StorageAccountRM: 'freerails'
    ContainerName: 'ci-builds'
    BlobPrefix: 'ci'